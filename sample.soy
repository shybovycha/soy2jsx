{namespace ServiceDesk.Templates.Customer.HelpCenterBranding}

/**
 * Help center branding page content
 * @param announcement
 * @param user
 */
{template .content}
    {if $user.canAdministerJIRA and not $announcement.portalId}
        <h3>{getText('sd.common.words.customize')}</h3>
    {else}
        <h3>{getText('sd.customerview.branding.announcement.customize.title')}</h3>
    {/if}
    {call aui.form.form}
        {param action: '' /}
        {param id: 'js-help-center-branding-submit' /}
        {param extraClasses: 'cv-help-center-branding-form' /}
        {param isTopLabels: true /}
        {param isLongLabels: true/}
        {param content}
            {if $user.canAdministerJIRA and not $announcement.portalId}
                {call aui.form.fieldset}
                    {param legendContent: '' /}
                    {param content}
                    <div class="cv-front-page-title-container js-front-page-title-container"></div>
                    {/param}
                {/call}
                {call aui.form.fieldset}
                    {param legendContent: '' /}
                    {param content}
                    <div class="js-header-option-container cv-header-option-container"></div>
                    {/param}
                {/call}
                {call aui.form.fieldset}
                    {param isGroup: 'true' /}
                    {param legendContent: getText('sd.customerview.helpcenterbranding.headerbar.color.header') /}
                    {param content}
                    <div class="js-header-bar-color-container cv-header-color-container"></div>
                    {/param}
                {/call}
            {elseif $announcement.canEditAnnouncement}
                {call aui.form.fieldset}
                    {param legendContent: '' /}
                    {param content}
                        <div class="js-header-option-container cv-header-option-container"></div>
                    {/param}
                {/call}
            {/if}
            <div class="cv-help-center-branding-buttons">
                {call ServiceDesk.Templates.Shared.Form.submitButtons}
                    {param submitButtonLabel: getText('sd.customerview.helpcenterbranding.save') /}
                    {param submitExtraClasses: 'js-help-center-branding-submit-button' /}
                    {param cancelExtraClasses: 'js-help-center-branding-cancel-button' /}
                    {param cancelText: getText('sd.common.words.cancel') /}
                {/call}
            </div>
        {/param}
    {/call}
{/template}

/**
 * Help center branding header options
 * @param canAdministerJIRA
 * @param? currentHelpCenterName the current name of the help center, defaults to 'Help Center'
 * @param? currentAnnouncementHeader the current announcement header, defaults to blank
 * @param? currentAnnouncementMessage the current announcement message, defaults to blank
 * @param isHelpCenter
 */
{template .headerOptions}
    // We can't use aui .radioField soy here because we need to put markup between the radio buttons
    {if $canAdministerJIRA and $isHelpCenter}
        <div class="field-group">
            <label for="help-center-header-option-text-only-text">{getText('sd.customerview.helpcenterbranding.portalcontentareaoptions.headeroptions.display.text.only.label')}</label>
            <input id="help-center-header-option-text-only-text" class="text full-width-field" type="text" name="sharedPortalName"
                value="{$currentHelpCenterName}"
                data-aui-validation-field=""
                data-aui-form-notification-position="bottom"
                data-aui-validation-when="input"
                data-aui-validation-trimmaxlength="30"
                data-aui-validation-trimminlength="1">
            <div class="description">({getText('sd.customerview.helpcenterbranding.portalcontentareaoptions.headeroptions.display.text.only.desc')})</div>
        </div>
    {/if}
    <div class="field-group">
        <label for="help-center-header-option-announcement-header">{getText('sd.customerview.helpcenterbranding.portalcontentareaoptions.headeroptions.announcement.header.label')}</label>
        <input id="help-center-header-option-announcement-header" class="text full-width-field" type="text" name="announcementHeader"
            value="{$currentAnnouncementHeader}"
            placeholder="{getText('sd.customerview.helpcenterbranding.portalcontentareaoptions.headeroptions.announcement.placeholder')}">
    </div>
    <legend><span>{getText('sd.customerview.helpcenterbranding.portalcontentareaoptions.headeroptions.announcement.message.label')}</span></legend>
    <div class="field-group">
        <label for="help-center-header-option-announcement-message">{getText('sd.customerview.helpcenterbranding.portalcontentareaoptions.headeroptions.announcement.message.label')}</label>
        <textarea class="textarea full-width-field" name="announcementMessage" id="help-center-header-option-announcement-message">
            {$currentAnnouncementMessage}
        </textarea>
        <div class="announement-description">
            {getText('sd.admin.standard.linkshelp.text.intro')}{sp}<span class="wiki-example">{getText('sd.admin.standard.linkshelp.text.example.helpcenter')}</span>
        </div>
    </div>
    {if $canAdministerJIRA and $isHelpCenter}
        <div class="checkbox cv-help-center-header-option-logo-container" id="help-center-header-option-logo-container">
            <input id="help-center-header-option-logo" class="checkbox" type="checkbox" name="help-center-header-options">
            <label for="help-center-header-option-logo">{getText('sd.customerview.helpcenterbranding.portalcontentareaoptions.headeroptions.upload.logo.label')}</label>
            <div id="help-center-header-option-logo-uploader" class="js-help-center-header-option-logo cv-help-center-header-option-logo">
                {call aui.buttons.button}
                    {param extraAttributes: ['type': 'button'] /}
                    {param extraClasses: 'js-choose-logo' /}
                    {param text}
                        {getText('sd.admin.details.logo.change')}
                    {/param}
                {/call}{sp}
                <span id="cv-logo-upload-status" class="cv-sd-status"></span>
                <input type="hidden" name="logoDataURI" class="js-logo-data-uri" >
            </div>
        </div>
        <div id="help-center-header-option-generate-color-container" class="cv-hc-branding-generate-color-container">
            <button id="help-center-header-option-generate-color" type="button" class="aui-button aui-button-link">{getText('sd.customerview.helpcenterbranding.logo.generate.color')}</button>
            <span id="cv-generate-color-status" class="cv-sd-status"></span>
        </div>
    {/if}
{/template}

/**
 * Help center page title editing view in sidepanel.
 * @param helpCenterTitle
 */
{template .frontPageTitle}
    {call aui.form.fieldGroup}
        {param content}
            {call aui.form.label}
                {param content: getText('sd.customerview.helpcenterbranding.frontpagetitle.title') /}
                {param forField: 'cv-front-page-title' /}
                {param isRequired: false /}
            {/call}
            {call aui.form.input}
                {param type: 'text' /}
                {param id: 'cv-front-page-title' /}
                {param name: 'helpCenterTitle' /}
                {param extraAttributes: [
                    'data-aui-form-notification-position': 'bottom',
                    'data-aui-validation-field': '',
                    'data-aui-validation-when': 'input',
                    'data-aui-validation-trimminlength': 1,
                    'data-aui-validation-trimmaxlength': 100
                ] /}
                {param value: $helpCenterTitle /}
                {param extraClasses: ['cv-front-page-title-input', 'js-front-page-title-input', 'full-width-field'] /}
            {/call}
        {/param}
    {/call}
{/template}

/**
* Help Center Branding Header Bar Color Picker Area
* @param? headerBGColor
* @param? headerLinkColor
* @param? headerLinkHoverColor
* @param? headerLinkHoverBGColor
*/
{template .headerBarColor}
    <div class="cv-help-center-color-picker">
        <sd-color-picker id="help-center-header-bg-color-picker" class="help-center-header-color-picker" name="headerBGColor" value="{$headerBGColor}"></sd-color-picker>
        <label for="help-center-header-bg-color-picker">{getText('sd.customerview.helpcenterbranding.headercolor.headerbg')}</label>
    </div>

    <div class="cv-help-center-color-picker">
        <sd-color-picker id="help-center-header-link-color-picker" class="help-center-header-color-picker" name="headerLinkColor" value="{$headerLinkColor}"></sd-color-picker>
        <label for="help-center-header-link-color-picker">{getText('sd.customerview.helpcenterbranding.headercolor.headerlink')}</label>
    </div>

    <div class="cv-help-center-color-picker">
        <sd-color-picker id="help-center-link-hover-bg-color-picker" class="help-center-header-color-picker" name="headerLinkHoverBGColor" value="{$headerLinkHoverBGColor}"></sd-color-picker>
        <label for="help-center-link-hover-bg-color-picker">{getText('sd.customerview.helpcenterbranding.headercolor.headerlinkhoverbg')}</label>
    </div>

    <div class="cv-help-center-color-picker">
        <sd-color-picker id="help-center-link-hover-color-picker" class="help-center-header-color-picker" name="headerLinkHoverColor" value="{$headerLinkHoverColor}"></sd-color-picker>
        <label for="help-center-link-hover-color-picker">{getText('sd.customerview.helpcenterbranding.headercolor.headerlinkhover')}</label>
    </div>

{/template}

/**
* Renders all preview themes style for help center branding
* adding additional theme style for other color picker here.
* @param headerBGColor
* @param headerLinkColor
* @param headerLinkHoverColor
* @param headerLinkHoverBGColor
*/
{template .helpCenterBrandingPreviewTheme}
/*    <style id="help-center-branding-preview">
        .help-center-custom-theme .aui-header {lb}
            background-color: {$headerBGColor};
            border-bottom-color: {$headerLinkColor};
        {rb}
        {\n}
        .help-center-custom-theme .aui-header .header-feedback-link,
        .help-center-custom-theme .aui-header a {lb}
            color: {$headerLinkColor}
        {rb}
        {\n}

        .help-center-custom-theme .aui-dropdown2.aui-style-default .active,
        .help-center-custom-theme .aui-header .aui-dropdown2-trigger.active,
        .help-center-custom-theme .aui-header a:focus .header-feedback-link,
        .help-center-custom-theme .aui-header a:active .header-feedback-link,
        .help-center-custom-theme .aui-header a:hover .header-feedback-link,
        .help-center-custom-theme .aui-header a:focus,
        .help-center-custom-theme .aui-header a:active,
        .help-center-custom-theme .aui-header a:hover,
        .help-center-custom-theme .aui-dropdown2.aui-style-default.aui-dropdown2-in-header .aui-dropdown2-section a:hover{lb}
            color: {$headerLinkHoverColor};
            background-color: {$headerLinkHoverBGColor};
        {rb}
        {\n}

        .help-center-custom-theme .aui-header .aui-dropdown2-trigger:after {lb}
            border-top-color: {$headerLinkColor};
        {rb}
        {\n}

        .help-center-custom-theme .aui-header .aui-dropdown2-trigger:hover:after,
        .help-center-custom-theme .aui-header .aui-dropdown2-trigger.active::after {lb}
            border-top-color: {$headerLinkHoverColor};
        {rb}
        {\n}

        .help-center-custom-theme .aui-header .aui-badge.sd-cv-badge,
        .help-center-custom-theme .aui-badge {lb}
            background-color: {$headerLinkColor};
            color: {$headerBGColor};
        {rb}

        .help-center-custom-theme .aui-header a:hover .aui-badge.sd-cv-badge {lb}
            color: {$headerLinkColor};
            background-color: {$headerBGColor};

        {rb}
    <style>
*/
{/template}